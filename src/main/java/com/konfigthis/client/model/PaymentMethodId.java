/*
 * Cleemy Expenses
 * Welcome on the documentation for the CleemyExpenses API. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: developers@lucca.fr
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * How this expense was made: the owner used his money, an enterprise debit card, or a Cleemy card: - 0: User - 1: CorporateCard - 3: Cleemy Card
 */
@JsonAdapter(PaymentMethodId.Adapter.class)public enum PaymentMethodId {
  
  NUMBER_0(0),
  
  NUMBER_1(1),
  
  NUMBER_3(3);

  private Double value;

  PaymentMethodId(Double value) {
    this.value = value;
  }

  public Double getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static PaymentMethodId fromValue(Double value) {
    for (PaymentMethodId b : PaymentMethodId.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<PaymentMethodId> {
    @Override
    public void write(final JsonWriter jsonWriter, final PaymentMethodId enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public PaymentMethodId read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return PaymentMethodId.fromValue(new BigDecimal(value));
    }
  }
}

